// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class DefaultSubtaskRow {
  static const table = 'default_subtask';

  static const field = (
    id: 'id',
    name: 'name',
    description: 'description',
    order: 'order',
    createdAt: 'created_at',
    createdBy: 'created_by',
    project: 'project',
  );

  final String id;
  final String? name;
  final String? description;
  final int order;
  final DateTime createdAt;
  final String? createdBy;
  final String? project;

  const DefaultSubtaskRow({
    required this.id,
    this.name,
    this.description,
    required this.order,
    required this.createdAt,
    this.createdBy,
    this.project,
  });

  factory DefaultSubtaskRow.fromJson(Map<String, dynamic> json) {
    return DefaultSubtaskRow(
      id: json[field.id] as String,
      name: json[field.name],
      description: json[field.description],
      order: (json[field.order] as num).toInt(),
      createdAt: DateTime.parse(json[field.createdAt]),
      createdBy: json[field.createdBy],
      project: json[field.project],
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.name: name,
      field.description: description,
      field.order: order,
      field.createdAt: createdAt.toIso8601String(),
      field.createdBy: createdBy,
      field.project: project,
    };
  }

  DefaultSubtaskRow copyWith({
    String? id,
    String? name,
    String? description,
    int? order,
    DateTime? createdAt,
    String? createdBy,
    String? project,
  }) {
    return DefaultSubtaskRow(
      id: id ?? this.id,
      name: name ?? this.name,
      description: description ?? this.description,
      order: order ?? this.order,
      createdAt: createdAt ?? this.createdAt,
      createdBy: createdBy ?? this.createdBy,
      project: project ?? this.project,
    );
  }
}
