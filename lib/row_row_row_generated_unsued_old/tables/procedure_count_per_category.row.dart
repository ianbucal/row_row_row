// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class ProcedureCountPerCategoryRow {
  static const table = 'procedure_count_per_category';

  static const field = (
    categoryId: 'category_id',
    name: 'name',
    clinicName: 'clinic_name',
    clinicId: 'clinic_id',
    totalProcedureCount: 'total_procedure_count',
  );

  final String? categoryId;
  final String? name;
  final String? clinicName;
  final String? clinicId;
  final int? totalProcedureCount;

  const ProcedureCountPerCategoryRow({
    this.categoryId,
    this.name,
    this.clinicName,
    this.clinicId,
    this.totalProcedureCount,
  });

  factory ProcedureCountPerCategoryRow.fromJson(Map<String, dynamic> json) {
    return ProcedureCountPerCategoryRow(
      categoryId: json[field.categoryId],
      name: json[field.name],
      clinicName: json[field.clinicName],
      clinicId: json[field.clinicId],
      totalProcedureCount: json[field.totalProcedureCount] == null ? null : (json[field.totalProcedureCount] as num?)?.toInt(),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.categoryId: categoryId,
      field.name: name,
      field.clinicName: clinicName,
      field.clinicId: clinicId,
      field.totalProcedureCount: totalProcedureCount,
    };
  }

  ProcedureCountPerCategoryRow copyWith({
    String? categoryId,
    String? name,
    String? clinicName,
    String? clinicId,
    int? totalProcedureCount,
  }) {
    return ProcedureCountPerCategoryRow(
      categoryId: categoryId ?? this.categoryId,
      name: name ?? this.name,
      clinicName: clinicName ?? this.clinicName,
      clinicId: clinicId ?? this.clinicId,
      totalProcedureCount: totalProcedureCount ?? this.totalProcedureCount,
    );
  }
}
