// Generated by row_row_row tool
// Auto-generated file. Do not modify.
import 'dart:convert';

class TaskAppointmentProcedureSummaryRow {
  static const table = 'task_appointment_procedure_summary';

  static const field = (
    taskAppointmentProcedureId: 'task_appointment_procedure_id',
    appointmentId: 'appointment_id',
    procedureId: 'procedure_id',
    procedurePrice: 'procedure_price',
    procedureName: 'procedure_name',
    procedureCommission: 'procedure_commission',
    discountRate: 'discount_rate',
    discountAmount: 'discount_amount',
    refundAmount: 'refund_amount',
    paidOn: 'paid_on',
    originalProcedurePrice: 'original_procedure_price',
    notes: 'notes',
    appointmentProcedureCreatedAt: 'appointment_procedure_created_at',
    appointedClinicId: 'appointed_clinic_id',
    commissionEnteredByUser: 'commission_entered_by_user',
    specificExpenses: 'specific_expenses',
    totalExpenseAmount: 'total_expense_amount',
  );

  final String? taskAppointmentProcedureId;
  final String? appointmentId;
  final String? procedureId;
  final double? procedurePrice;
  final String? procedureName;
  final double? procedureCommission;
  final double? discountRate;
  final double? discountAmount;
  final double? refundAmount;
  final DateTime? paidOn;
  final double? originalProcedurePrice;
  final String? notes;
  final DateTime? appointmentProcedureCreatedAt;
  final String? appointedClinicId;
  final double? commissionEnteredByUser;
  final Map<dynamic, dynamic>? specificExpenses;
  final double? totalExpenseAmount;

  const TaskAppointmentProcedureSummaryRow({
    this.taskAppointmentProcedureId,
    this.appointmentId,
    this.procedureId,
    this.procedurePrice,
    this.procedureName,
    this.procedureCommission,
    this.discountRate,
    this.discountAmount,
    this.refundAmount,
    this.paidOn,
    this.originalProcedurePrice,
    this.notes,
    this.appointmentProcedureCreatedAt,
    this.appointedClinicId,
    this.commissionEnteredByUser,
    this.specificExpenses,
    this.totalExpenseAmount,
  });

  factory TaskAppointmentProcedureSummaryRow.fromJson(Map<String, dynamic> json) {
    return TaskAppointmentProcedureSummaryRow(
      taskAppointmentProcedureId: json[field.taskAppointmentProcedureId],
      appointmentId: json[field.appointmentId],
      procedureId: json[field.procedureId],
      procedurePrice: json[field.procedurePrice] == null ? null : (json[field.procedurePrice] as num?)?.toDouble(),
      procedureName: json[field.procedureName],
      procedureCommission: json[field.procedureCommission] == null ? null : (json[field.procedureCommission] as num?)?.toDouble(),
      discountRate: json[field.discountRate] == null ? null : (json[field.discountRate] as num?)?.toDouble(),
      discountAmount: json[field.discountAmount] == null ? null : (json[field.discountAmount] as num?)?.toDouble(),
      refundAmount: json[field.refundAmount] == null ? null : (json[field.refundAmount] as num?)?.toDouble(),
      paidOn: json[field.paidOn] == null ? null : DateTime.tryParse(json[field.paidOn] ?? ''),
      originalProcedurePrice: json[field.originalProcedurePrice] == null ? null : (json[field.originalProcedurePrice] as num?)?.toDouble(),
      notes: json[field.notes],
      appointmentProcedureCreatedAt: json[field.appointmentProcedureCreatedAt] == null ? null : DateTime.tryParse(json[field.appointmentProcedureCreatedAt] ?? ''),
      appointedClinicId: json[field.appointedClinicId],
      commissionEnteredByUser: json[field.commissionEnteredByUser] == null ? null : (json[field.commissionEnteredByUser] as num?)?.toDouble(),
      specificExpenses: json[field.specificExpenses] == null ? null : (json[field.specificExpenses] is String ? jsonDecode(json[field.specificExpenses]) : Map.from(json[field.specificExpenses])),
      totalExpenseAmount: json[field.totalExpenseAmount] == null ? null : (json[field.totalExpenseAmount] as num?)?.toDouble(),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.taskAppointmentProcedureId: taskAppointmentProcedureId,
      field.appointmentId: appointmentId,
      field.procedureId: procedureId,
      field.procedurePrice: procedurePrice,
      field.procedureName: procedureName,
      field.procedureCommission: procedureCommission,
      field.discountRate: discountRate,
      field.discountAmount: discountAmount,
      field.refundAmount: refundAmount,
      field.paidOn: paidOn?.toIso8601String(),
      field.originalProcedurePrice: originalProcedurePrice,
      field.notes: notes,
      field.appointmentProcedureCreatedAt: appointmentProcedureCreatedAt?.toIso8601String(),
      field.appointedClinicId: appointedClinicId,
      field.commissionEnteredByUser: commissionEnteredByUser,
      field.specificExpenses: specificExpenses,
      field.totalExpenseAmount: totalExpenseAmount,
    };
  }

  TaskAppointmentProcedureSummaryRow copyWith({
    String? taskAppointmentProcedureId,
    String? appointmentId,
    String? procedureId,
    double? procedurePrice,
    String? procedureName,
    double? procedureCommission,
    double? discountRate,
    double? discountAmount,
    double? refundAmount,
    DateTime? paidOn,
    double? originalProcedurePrice,
    String? notes,
    DateTime? appointmentProcedureCreatedAt,
    String? appointedClinicId,
    double? commissionEnteredByUser,
    Map<dynamic, dynamic>? specificExpenses,
    double? totalExpenseAmount,
  }) {
    return TaskAppointmentProcedureSummaryRow(
      taskAppointmentProcedureId: taskAppointmentProcedureId ?? this.taskAppointmentProcedureId,
      appointmentId: appointmentId ?? this.appointmentId,
      procedureId: procedureId ?? this.procedureId,
      procedurePrice: procedurePrice ?? this.procedurePrice,
      procedureName: procedureName ?? this.procedureName,
      procedureCommission: procedureCommission ?? this.procedureCommission,
      discountRate: discountRate ?? this.discountRate,
      discountAmount: discountAmount ?? this.discountAmount,
      refundAmount: refundAmount ?? this.refundAmount,
      paidOn: paidOn ?? this.paidOn,
      originalProcedurePrice: originalProcedurePrice ?? this.originalProcedurePrice,
      notes: notes ?? this.notes,
      appointmentProcedureCreatedAt: appointmentProcedureCreatedAt ?? this.appointmentProcedureCreatedAt,
      appointedClinicId: appointedClinicId ?? this.appointedClinicId,
      commissionEnteredByUser: commissionEnteredByUser ?? this.commissionEnteredByUser,
      specificExpenses: specificExpenses ?? this.specificExpenses,
      totalExpenseAmount: totalExpenseAmount ?? this.totalExpenseAmount,
    );
  }
}
