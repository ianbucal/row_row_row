// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class FormRow {
  static const table = 'form';

  static const field = (
    id: 'id',
    name: 'name',
    linkedProject: 'linked_project',
    url: 'url',
    description: 'description',
    createdAt: 'created_at',
    updatedAt: 'updated_at',
    createdBy: 'created_by',
    redirectLinkAfterFillout: 'redirect_link_after_fillout',
    customFormName: 'custom_form_name',
    previewImage: 'preview_image',
  );

  final String id;
  final String? name;
  final String? linkedProject;
  final String? url;
  final String? description;
  final DateTime createdAt;
  final DateTime? updatedAt;
  final String? createdBy;
  final String? redirectLinkAfterFillout;
  final String? customFormName;
  final String? previewImage;

  const FormRow({
    required this.id,
    this.name,
    this.linkedProject,
    this.url,
    this.description,
    required this.createdAt,
    this.updatedAt,
    this.createdBy,
    this.redirectLinkAfterFillout,
    this.customFormName,
    this.previewImage,
  });

  factory FormRow.fromJson(Map<String, dynamic> json) {
    return FormRow(
      id: json[field.id] as String,
      name: json[field.name],
      linkedProject: json[field.linkedProject],
      url: json[field.url],
      description: json[field.description],
      createdAt: DateTime.parse(json[field.createdAt]),
      updatedAt: json[field.updatedAt] == null ? null : DateTime.tryParse(json[field.updatedAt] ?? ''),
      createdBy: json[field.createdBy],
      redirectLinkAfterFillout: json[field.redirectLinkAfterFillout],
      customFormName: json[field.customFormName],
      previewImage: json[field.previewImage],
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.name: name,
      field.linkedProject: linkedProject,
      field.url: url,
      field.description: description,
      field.createdAt: createdAt.toIso8601String(),
      field.updatedAt: updatedAt?.toIso8601String(),
      field.createdBy: createdBy,
      field.redirectLinkAfterFillout: redirectLinkAfterFillout,
      field.customFormName: customFormName,
      field.previewImage: previewImage,
    };
  }

  FormRow copyWith({
    String? id,
    String? name,
    String? linkedProject,
    String? url,
    String? description,
    DateTime? createdAt,
    DateTime? updatedAt,
    String? createdBy,
    String? redirectLinkAfterFillout,
    String? customFormName,
    String? previewImage,
  }) {
    return FormRow(
      id: id ?? this.id,
      name: name ?? this.name,
      linkedProject: linkedProject ?? this.linkedProject,
      url: url ?? this.url,
      description: description ?? this.description,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
      createdBy: createdBy ?? this.createdBy,
      redirectLinkAfterFillout: redirectLinkAfterFillout ?? this.redirectLinkAfterFillout,
      customFormName: customFormName ?? this.customFormName,
      previewImage: previewImage ?? this.previewImage,
    );
  }
}
