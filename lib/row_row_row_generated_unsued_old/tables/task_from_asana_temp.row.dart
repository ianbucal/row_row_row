// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class TaskFromAsanaTempRow {
  static const table = 'task_from_asana_temp';

  static const field = (
    id: 'id',
    gid: 'gid',
    name: 'name',
    projectId: 'project_id',
    createdAt: 'created_at',
    assigneeGid: 'assignee_gid',
    assigneeName: 'assignee_name',
    followersGid: 'followers_gid',
    sectionGid: 'section_gid',
    sectionName: 'section_name',
    dueAt: 'due_at',
    notes: 'notes',
    modifiedAt: 'modified_at',
    sysCreatedAt: 'sys_created_at',
    parentGid: 'parent_gid',
    completedAt: 'completed_at',
  );

  final String id;
  final String? gid;
  final String? name;
  final String? projectId;
  final DateTime createdAt;
  final String? assigneeGid;
  final String? assigneeName;
  final List<String>? followersGid;
  final String? sectionGid;
  final String? sectionName;
  final DateTime? dueAt;
  final String? notes;
  final DateTime? modifiedAt;
  final DateTime sysCreatedAt;
  final String? parentGid;
  final DateTime? completedAt;

  const TaskFromAsanaTempRow({
    required this.id,
    this.gid,
    this.name,
    this.projectId,
    required this.createdAt,
    this.assigneeGid,
    this.assigneeName,
    this.followersGid,
    this.sectionGid,
    this.sectionName,
    this.dueAt,
    this.notes,
    this.modifiedAt,
    required this.sysCreatedAt,
    this.parentGid,
    this.completedAt,
  });

  factory TaskFromAsanaTempRow.fromJson(Map<String, dynamic> json) {
    return TaskFromAsanaTempRow(
      id: json[field.id] as String,
      gid: json[field.gid],
      name: json[field.name],
      projectId: json[field.projectId],
      createdAt: DateTime.parse(json[field.createdAt]),
      assigneeGid: json[field.assigneeGid],
      assigneeName: json[field.assigneeName],
      followersGid: json[field.followersGid] == null ? null : List<String>.from(json[field.followersGid]),
      sectionGid: json[field.sectionGid],
      sectionName: json[field.sectionName],
      dueAt: json[field.dueAt] == null ? null : DateTime.tryParse(json[field.dueAt] ?? ''),
      notes: json[field.notes],
      modifiedAt: json[field.modifiedAt] == null ? null : DateTime.tryParse(json[field.modifiedAt] ?? ''),
      sysCreatedAt: DateTime.parse(json[field.sysCreatedAt]),
      parentGid: json[field.parentGid],
      completedAt: json[field.completedAt] == null ? null : DateTime.tryParse(json[field.completedAt] ?? ''),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.gid: gid,
      field.name: name,
      field.projectId: projectId,
      field.createdAt: createdAt.toIso8601String(),
      field.assigneeGid: assigneeGid,
      field.assigneeName: assigneeName,
      field.followersGid: followersGid,
      field.sectionGid: sectionGid,
      field.sectionName: sectionName,
      field.dueAt: dueAt?.toIso8601String(),
      field.notes: notes,
      field.modifiedAt: modifiedAt?.toIso8601String(),
      field.sysCreatedAt: sysCreatedAt.toIso8601String(),
      field.parentGid: parentGid,
      field.completedAt: completedAt?.toIso8601String(),
    };
  }

  TaskFromAsanaTempRow copyWith({
    String? id,
    String? gid,
    String? name,
    String? projectId,
    DateTime? createdAt,
    String? assigneeGid,
    String? assigneeName,
    List<String>? followersGid,
    String? sectionGid,
    String? sectionName,
    DateTime? dueAt,
    String? notes,
    DateTime? modifiedAt,
    DateTime? sysCreatedAt,
    String? parentGid,
    DateTime? completedAt,
  }) {
    return TaskFromAsanaTempRow(
      id: id ?? this.id,
      gid: gid ?? this.gid,
      name: name ?? this.name,
      projectId: projectId ?? this.projectId,
      createdAt: createdAt ?? this.createdAt,
      assigneeGid: assigneeGid ?? this.assigneeGid,
      assigneeName: assigneeName ?? this.assigneeName,
      followersGid: followersGid ?? this.followersGid,
      sectionGid: sectionGid ?? this.sectionGid,
      sectionName: sectionName ?? this.sectionName,
      dueAt: dueAt ?? this.dueAt,
      notes: notes ?? this.notes,
      modifiedAt: modifiedAt ?? this.modifiedAt,
      sysCreatedAt: sysCreatedAt ?? this.sysCreatedAt,
      parentGid: parentGid ?? this.parentGid,
      completedAt: completedAt ?? this.completedAt,
    );
  }
}
