// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class DueDateTaskSubtaskCustomerProcedureViewRow {
  static const table = 'due_date_task_subtask_customer_procedure_view';

  static const field = (
    dueDate: 'due_date',
    taskId: 'task_id',
    subtaskId: 'subtask_id',
    customerProcedureId: 'customer_procedure_id',
    taskName: 'task_name',
    subtaskName: 'subtask_name',
    procedureName: 'procedure_name',
    assigneeId: 'assignee_id',
    assigneeName: 'assignee_name',
    taskDetails: 'task_details',
    subtaskDetails: 'subtask_details',
    projectId: 'project_id',
    projectName: 'project_name',
  );

  final DateTime? dueDate;
  final String? taskId;
  final String? subtaskId;
  final String? customerProcedureId;
  final String? taskName;
  final String? subtaskName;
  final String? procedureName;
  final String? assigneeId;
  final String? assigneeName;
  final String? taskDetails;
  final String? subtaskDetails;
  final String? projectId;
  final String? projectName;

  const DueDateTaskSubtaskCustomerProcedureViewRow({
    this.dueDate,
    this.taskId,
    this.subtaskId,
    this.customerProcedureId,
    this.taskName,
    this.subtaskName,
    this.procedureName,
    this.assigneeId,
    this.assigneeName,
    this.taskDetails,
    this.subtaskDetails,
    this.projectId,
    this.projectName,
  });

  factory DueDateTaskSubtaskCustomerProcedureViewRow.fromJson(Map<String, dynamic> json) {
    return DueDateTaskSubtaskCustomerProcedureViewRow(
      dueDate: json[field.dueDate] == null ? null : DateTime.tryParse(json[field.dueDate] ?? ''),
      taskId: json[field.taskId],
      subtaskId: json[field.subtaskId],
      customerProcedureId: json[field.customerProcedureId],
      taskName: json[field.taskName],
      subtaskName: json[field.subtaskName],
      procedureName: json[field.procedureName],
      assigneeId: json[field.assigneeId],
      assigneeName: json[field.assigneeName],
      taskDetails: json[field.taskDetails],
      subtaskDetails: json[field.subtaskDetails],
      projectId: json[field.projectId],
      projectName: json[field.projectName],
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.dueDate: dueDate?.toIso8601String(),
      field.taskId: taskId,
      field.subtaskId: subtaskId,
      field.customerProcedureId: customerProcedureId,
      field.taskName: taskName,
      field.subtaskName: subtaskName,
      field.procedureName: procedureName,
      field.assigneeId: assigneeId,
      field.assigneeName: assigneeName,
      field.taskDetails: taskDetails,
      field.subtaskDetails: subtaskDetails,
      field.projectId: projectId,
      field.projectName: projectName,
    };
  }

  DueDateTaskSubtaskCustomerProcedureViewRow copyWith({
    DateTime? dueDate,
    String? taskId,
    String? subtaskId,
    String? customerProcedureId,
    String? taskName,
    String? subtaskName,
    String? procedureName,
    String? assigneeId,
    String? assigneeName,
    String? taskDetails,
    String? subtaskDetails,
    String? projectId,
    String? projectName,
  }) {
    return DueDateTaskSubtaskCustomerProcedureViewRow(
      dueDate: dueDate ?? this.dueDate,
      taskId: taskId ?? this.taskId,
      subtaskId: subtaskId ?? this.subtaskId,
      customerProcedureId: customerProcedureId ?? this.customerProcedureId,
      taskName: taskName ?? this.taskName,
      subtaskName: subtaskName ?? this.subtaskName,
      procedureName: procedureName ?? this.procedureName,
      assigneeId: assigneeId ?? this.assigneeId,
      assigneeName: assigneeName ?? this.assigneeName,
      taskDetails: taskDetails ?? this.taskDetails,
      subtaskDetails: subtaskDetails ?? this.subtaskDetails,
      projectId: projectId ?? this.projectId,
      projectName: projectName ?? this.projectName,
    );
  }
}
