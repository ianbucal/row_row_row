// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class TaskAppointmentRow {
  static const table = 'task_appointment';

  static const field = (
    id: 'id',
    createdAt: 'created_at',
    task: 'task',
    generalDeposit: 'general_deposit',
    generalDiscountRate: 'general_discount_rate',
    generalDiscountAmount: 'general_discount_amount',
    dueDate: 'due_date',
    notes: 'notes',
    addedBy: 'added_by',
    generalRefund: 'general_refund',
    assignedClinic: 'assigned_clinic',
  );

  final String id;
  final DateTime createdAt;
  final String task;
  final double generalDeposit;
  final double? generalDiscountRate;
  final double? generalDiscountAmount;
  final DateTime? dueDate;
  final String? notes;
  final String? addedBy;
  final double? generalRefund;
  final String? assignedClinic;

  const TaskAppointmentRow({
    required this.id,
    required this.createdAt,
    required this.task,
    required this.generalDeposit,
    this.generalDiscountRate,
    this.generalDiscountAmount,
    this.dueDate,
    this.notes,
    this.addedBy,
    this.generalRefund,
    this.assignedClinic,
  });

  factory TaskAppointmentRow.fromJson(Map<String, dynamic> json) {
    return TaskAppointmentRow(
      id: json[field.id] as String,
      createdAt: DateTime.parse(json[field.createdAt]),
      task: json[field.task] as String,
      generalDeposit: (json[field.generalDeposit] as num).toDouble(),
      generalDiscountRate: json[field.generalDiscountRate] == null ? null : (json[field.generalDiscountRate] as num?)?.toDouble(),
      generalDiscountAmount: json[field.generalDiscountAmount] == null ? null : (json[field.generalDiscountAmount] as num?)?.toDouble(),
      dueDate: json[field.dueDate] == null ? null : DateTime.tryParse(json[field.dueDate] ?? ''),
      notes: json[field.notes],
      addedBy: json[field.addedBy],
      generalRefund: json[field.generalRefund] == null ? null : (json[field.generalRefund] as num?)?.toDouble(),
      assignedClinic: json[field.assignedClinic],
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.createdAt: createdAt.toIso8601String(),
      field.task: task,
      field.generalDeposit: generalDeposit,
      field.generalDiscountRate: generalDiscountRate,
      field.generalDiscountAmount: generalDiscountAmount,
      field.dueDate: dueDate?.toIso8601String(),
      field.notes: notes,
      field.addedBy: addedBy,
      field.generalRefund: generalRefund,
      field.assignedClinic: assignedClinic,
    };
  }

  TaskAppointmentRow copyWith({
    String? id,
    DateTime? createdAt,
    String? task,
    double? generalDeposit,
    double? generalDiscountRate,
    double? generalDiscountAmount,
    DateTime? dueDate,
    String? notes,
    String? addedBy,
    double? generalRefund,
    String? assignedClinic,
  }) {
    return TaskAppointmentRow(
      id: id ?? this.id,
      createdAt: createdAt ?? this.createdAt,
      task: task ?? this.task,
      generalDeposit: generalDeposit ?? this.generalDeposit,
      generalDiscountRate: generalDiscountRate ?? this.generalDiscountRate,
      generalDiscountAmount: generalDiscountAmount ?? this.generalDiscountAmount,
      dueDate: dueDate ?? this.dueDate,
      notes: notes ?? this.notes,
      addedBy: addedBy ?? this.addedBy,
      generalRefund: generalRefund ?? this.generalRefund,
      assignedClinic: assignedClinic ?? this.assignedClinic,
    );
  }
}
