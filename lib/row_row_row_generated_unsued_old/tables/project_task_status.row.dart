// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class ProjectTaskStatusRow {
  static const table = 'project_task_status';

  static const field = (
    id: 'id',
    status: 'status',
    order: 'order',
    createdAt: 'created_at',
    createdBy: 'created_by',
    project: 'project',
    forNullStatus: 'for_null_status',
    gid: 'gid',
    sysCreatedAt: 'sys_created_at',
  );

  final String id;
  final String? status;
  final int? order;
  final DateTime createdAt;
  final String? createdBy;
  final String? project;
  final bool forNullStatus;
  final String? gid;
  final DateTime? sysCreatedAt;

  const ProjectTaskStatusRow({
    required this.id,
    this.status,
    this.order,
    required this.createdAt,
    this.createdBy,
    this.project,
    required this.forNullStatus,
    this.gid,
    this.sysCreatedAt,
  });

  factory ProjectTaskStatusRow.fromJson(Map<String, dynamic> json) {
    return ProjectTaskStatusRow(
      id: json[field.id] as String,
      status: json[field.status],
      order: json[field.order] == null ? null : (json[field.order] as num?)?.toInt(),
      createdAt: DateTime.parse(json[field.createdAt]),
      createdBy: json[field.createdBy],
      project: json[field.project],
      forNullStatus: json[field.forNullStatus] as bool,
      gid: json[field.gid],
      sysCreatedAt: json[field.sysCreatedAt] == null ? null : DateTime.tryParse(json[field.sysCreatedAt] ?? ''),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.status: status,
      field.order: order,
      field.createdAt: createdAt.toIso8601String(),
      field.createdBy: createdBy,
      field.project: project,
      field.forNullStatus: forNullStatus,
      field.gid: gid,
      field.sysCreatedAt: sysCreatedAt?.toIso8601String(),
    };
  }

  ProjectTaskStatusRow copyWith({
    String? id,
    String? status,
    int? order,
    DateTime? createdAt,
    String? createdBy,
    String? project,
    bool? forNullStatus,
    String? gid,
    DateTime? sysCreatedAt,
  }) {
    return ProjectTaskStatusRow(
      id: id ?? this.id,
      status: status ?? this.status,
      order: order ?? this.order,
      createdAt: createdAt ?? this.createdAt,
      createdBy: createdBy ?? this.createdBy,
      project: project ?? this.project,
      forNullStatus: forNullStatus ?? this.forNullStatus,
      gid: gid ?? this.gid,
      sysCreatedAt: sysCreatedAt ?? this.sysCreatedAt,
    );
  }
}
