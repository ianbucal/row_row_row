// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class CustomerProcedureWithTaskDetailRow {
  static const table = 'customer_procedure_with_task_detail';

  static const field = (
    customerProcedureId: 'customer_procedure_id',
    taskId: 'task_id',
    treatmentClinic: 'treatment_clinic',
    procedureCommission: 'procedure_commission',
    totalPrice: 'total_price',
    customerProcedureCreatedAt: 'customer_procedure_created_at',
    procedure: 'procedure',
    dueDate: 'due_date',
    datePaid: 'date_paid',
    project: 'project',
    taskCreatedAt: 'task_created_at',
    createdBy: 'created_by',
    customerName: 'customer_name',
    assignee: 'assignee',
    customerNationality: 'customer_nationality',
    customerBirthday: 'customer_birthday',
    customerCountryResidence: 'customer_country_residence',
    customerPhone: 'customer_phone',
    customerGender: 'customer_gender',
    description: 'description',
  );

  final String? customerProcedureId;
  final String? taskId;
  final String? treatmentClinic;
  final double? procedureCommission;
  final double? totalPrice;
  final DateTime? customerProcedureCreatedAt;
  final String? procedure;
  final DateTime? dueDate;
  final DateTime? datePaid;
  final String? project;
  final DateTime? taskCreatedAt;
  final String? createdBy;
  final String? customerName;
  final String? assignee;
  final String? customerNationality;
  final DateTime? customerBirthday;
  final String? customerCountryResidence;
  final String? customerPhone;
  final String? customerGender;
  final String? description;

  const CustomerProcedureWithTaskDetailRow({
    this.customerProcedureId,
    this.taskId,
    this.treatmentClinic,
    this.procedureCommission,
    this.totalPrice,
    this.customerProcedureCreatedAt,
    this.procedure,
    this.dueDate,
    this.datePaid,
    this.project,
    this.taskCreatedAt,
    this.createdBy,
    this.customerName,
    this.assignee,
    this.customerNationality,
    this.customerBirthday,
    this.customerCountryResidence,
    this.customerPhone,
    this.customerGender,
    this.description,
  });

  factory CustomerProcedureWithTaskDetailRow.fromJson(Map<String, dynamic> json) {
    return CustomerProcedureWithTaskDetailRow(
      customerProcedureId: json[field.customerProcedureId],
      taskId: json[field.taskId],
      treatmentClinic: json[field.treatmentClinic],
      procedureCommission: json[field.procedureCommission] == null ? null : (json[field.procedureCommission] as num?)?.toDouble(),
      totalPrice: json[field.totalPrice] == null ? null : (json[field.totalPrice] as num?)?.toDouble(),
      customerProcedureCreatedAt: json[field.customerProcedureCreatedAt] == null ? null : DateTime.tryParse(json[field.customerProcedureCreatedAt] ?? ''),
      procedure: json[field.procedure],
      dueDate: json[field.dueDate] == null ? null : DateTime.tryParse(json[field.dueDate] ?? ''),
      datePaid: json[field.datePaid] == null ? null : DateTime.tryParse(json[field.datePaid] ?? ''),
      project: json[field.project],
      taskCreatedAt: json[field.taskCreatedAt] == null ? null : DateTime.tryParse(json[field.taskCreatedAt] ?? ''),
      createdBy: json[field.createdBy],
      customerName: json[field.customerName],
      assignee: json[field.assignee],
      customerNationality: json[field.customerNationality],
      customerBirthday: json[field.customerBirthday] == null ? null : DateTime.tryParse(json[field.customerBirthday] ?? ''),
      customerCountryResidence: json[field.customerCountryResidence],
      customerPhone: json[field.customerPhone],
      customerGender: json[field.customerGender],
      description: json[field.description],
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.customerProcedureId: customerProcedureId,
      field.taskId: taskId,
      field.treatmentClinic: treatmentClinic,
      field.procedureCommission: procedureCommission,
      field.totalPrice: totalPrice,
      field.customerProcedureCreatedAt: customerProcedureCreatedAt?.toIso8601String(),
      field.procedure: procedure,
      field.dueDate: dueDate?.toIso8601String(),
      field.datePaid: datePaid?.toIso8601String(),
      field.project: project,
      field.taskCreatedAt: taskCreatedAt?.toIso8601String(),
      field.createdBy: createdBy,
      field.customerName: customerName,
      field.assignee: assignee,
      field.customerNationality: customerNationality,
      field.customerBirthday: customerBirthday?.toIso8601String(),
      field.customerCountryResidence: customerCountryResidence,
      field.customerPhone: customerPhone,
      field.customerGender: customerGender,
      field.description: description,
    };
  }

  CustomerProcedureWithTaskDetailRow copyWith({
    String? customerProcedureId,
    String? taskId,
    String? treatmentClinic,
    double? procedureCommission,
    double? totalPrice,
    DateTime? customerProcedureCreatedAt,
    String? procedure,
    DateTime? dueDate,
    DateTime? datePaid,
    String? project,
    DateTime? taskCreatedAt,
    String? createdBy,
    String? customerName,
    String? assignee,
    String? customerNationality,
    DateTime? customerBirthday,
    String? customerCountryResidence,
    String? customerPhone,
    String? customerGender,
    String? description,
  }) {
    return CustomerProcedureWithTaskDetailRow(
      customerProcedureId: customerProcedureId ?? this.customerProcedureId,
      taskId: taskId ?? this.taskId,
      treatmentClinic: treatmentClinic ?? this.treatmentClinic,
      procedureCommission: procedureCommission ?? this.procedureCommission,
      totalPrice: totalPrice ?? this.totalPrice,
      customerProcedureCreatedAt: customerProcedureCreatedAt ?? this.customerProcedureCreatedAt,
      procedure: procedure ?? this.procedure,
      dueDate: dueDate ?? this.dueDate,
      datePaid: datePaid ?? this.datePaid,
      project: project ?? this.project,
      taskCreatedAt: taskCreatedAt ?? this.taskCreatedAt,
      createdBy: createdBy ?? this.createdBy,
      customerName: customerName ?? this.customerName,
      assignee: assignee ?? this.assignee,
      customerNationality: customerNationality ?? this.customerNationality,
      customerBirthday: customerBirthday ?? this.customerBirthday,
      customerCountryResidence: customerCountryResidence ?? this.customerCountryResidence,
      customerPhone: customerPhone ?? this.customerPhone,
      customerGender: customerGender ?? this.customerGender,
      description: description ?? this.description,
    );
  }
}
