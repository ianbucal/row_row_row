// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class UserGroupRow {
  static const table = 'user_group';

  static const field = (
    id: 'id',
    name: 'name',
    description: 'description',
    createdBy: 'created_by',
    createdAt: 'created_at',
    updatedAt: 'updated_at',
    deletedAt: 'deleted_at',
  );

  final String id;
  final String? name;
  final String? description;
  final String? createdBy;
  final DateTime createdAt;
  final DateTime? updatedAt;
  final DateTime? deletedAt;

  const UserGroupRow({
    required this.id,
    this.name,
    this.description,
    this.createdBy,
    required this.createdAt,
    this.updatedAt,
    this.deletedAt,
  });

  factory UserGroupRow.fromJson(Map<String, dynamic> json) {
    return UserGroupRow(
      id: json[field.id] as String,
      name: json[field.name],
      description: json[field.description],
      createdBy: json[field.createdBy],
      createdAt: DateTime.parse(json[field.createdAt]),
      updatedAt: json[field.updatedAt] == null ? null : DateTime.tryParse(json[field.updatedAt] ?? ''),
      deletedAt: json[field.deletedAt] == null ? null : DateTime.tryParse(json[field.deletedAt] ?? ''),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.name: name,
      field.description: description,
      field.createdBy: createdBy,
      field.createdAt: createdAt.toIso8601String(),
      field.updatedAt: updatedAt?.toIso8601String(),
      field.deletedAt: deletedAt?.toIso8601String(),
    };
  }

  UserGroupRow copyWith({
    String? id,
    String? name,
    String? description,
    String? createdBy,
    DateTime? createdAt,
    DateTime? updatedAt,
    DateTime? deletedAt,
  }) {
    return UserGroupRow(
      id: id ?? this.id,
      name: name ?? this.name,
      description: description ?? this.description,
      createdBy: createdBy ?? this.createdBy,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
      deletedAt: deletedAt ?? this.deletedAt,
    );
  }
}
