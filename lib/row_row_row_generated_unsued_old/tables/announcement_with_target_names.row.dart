// Generated by row_row_row tool
// Auto-generated file. Do not modify.
import 'dart:convert';

class AnnouncementWithTargetNamesRow {
  static const table = 'announcement_with_target_names';

  static const field = (
    id: 'id',
    title: 'title',
    content: 'content',
    createdBy: 'created_by',
    createdAt: 'created_at',
    deletedAt: 'deleted_at',
    personal: 'personal',
    routeData: 'route_data',
    creatorName: 'creator_name',
    roleIds: 'role_ids',
    roleNames: 'role_names',
    userIds: 'user_ids',
    userNames: 'user_names',
    groupIds: 'group_ids',
    groupNames: 'group_names',
    allTargetIds: 'all_target_ids',
  );

  final String? id;
  final String? title;
  final String? content;
  final String? createdBy;
  final DateTime? createdAt;
  final DateTime? deletedAt;
  final bool? personal;
  final Map<dynamic, dynamic>? routeData;
  final String? creatorName;
  final List<String>? roleIds;
  final List<String>? roleNames;
  final List<String>? userIds;
  final List<String>? userNames;
  final List<String>? groupIds;
  final List<String>? groupNames;
  final List<String>? allTargetIds;

  const AnnouncementWithTargetNamesRow({
    this.id,
    this.title,
    this.content,
    this.createdBy,
    this.createdAt,
    this.deletedAt,
    this.personal,
    this.routeData,
    this.creatorName,
    this.roleIds,
    this.roleNames,
    this.userIds,
    this.userNames,
    this.groupIds,
    this.groupNames,
    this.allTargetIds,
  });

  factory AnnouncementWithTargetNamesRow.fromJson(Map<String, dynamic> json) {
    return AnnouncementWithTargetNamesRow(
      id: json[field.id],
      title: json[field.title],
      content: json[field.content],
      createdBy: json[field.createdBy],
      createdAt: json[field.createdAt] == null ? null : DateTime.tryParse(json[field.createdAt] ?? ''),
      deletedAt: json[field.deletedAt] == null ? null : DateTime.tryParse(json[field.deletedAt] ?? ''),
      personal: json[field.personal],
      routeData: json[field.routeData] == null ? null : (json[field.routeData] is String ? jsonDecode(json[field.routeData]) : Map.from(json[field.routeData])),
      creatorName: json[field.creatorName],
      roleIds: json[field.roleIds] == null ? null : List<String>.from(json[field.roleIds]),
      roleNames: json[field.roleNames] == null ? null : List<String>.from(json[field.roleNames]),
      userIds: json[field.userIds] == null ? null : List<String>.from(json[field.userIds]),
      userNames: json[field.userNames] == null ? null : List<String>.from(json[field.userNames]),
      groupIds: json[field.groupIds] == null ? null : List<String>.from(json[field.groupIds]),
      groupNames: json[field.groupNames] == null ? null : List<String>.from(json[field.groupNames]),
      allTargetIds: json[field.allTargetIds] == null ? null : List<String>.from(json[field.allTargetIds]),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.title: title,
      field.content: content,
      field.createdBy: createdBy,
      field.createdAt: createdAt?.toIso8601String(),
      field.deletedAt: deletedAt?.toIso8601String(),
      field.personal: personal,
      field.routeData: routeData,
      field.creatorName: creatorName,
      field.roleIds: roleIds,
      field.roleNames: roleNames,
      field.userIds: userIds,
      field.userNames: userNames,
      field.groupIds: groupIds,
      field.groupNames: groupNames,
      field.allTargetIds: allTargetIds,
    };
  }

  AnnouncementWithTargetNamesRow copyWith({
    String? id,
    String? title,
    String? content,
    String? createdBy,
    DateTime? createdAt,
    DateTime? deletedAt,
    bool? personal,
    Map<dynamic, dynamic>? routeData,
    String? creatorName,
    List<String>? roleIds,
    List<String>? roleNames,
    List<String>? userIds,
    List<String>? userNames,
    List<String>? groupIds,
    List<String>? groupNames,
    List<String>? allTargetIds,
  }) {
    return AnnouncementWithTargetNamesRow(
      id: id ?? this.id,
      title: title ?? this.title,
      content: content ?? this.content,
      createdBy: createdBy ?? this.createdBy,
      createdAt: createdAt ?? this.createdAt,
      deletedAt: deletedAt ?? this.deletedAt,
      personal: personal ?? this.personal,
      routeData: routeData ?? this.routeData,
      creatorName: creatorName ?? this.creatorName,
      roleIds: roleIds ?? this.roleIds,
      roleNames: roleNames ?? this.roleNames,
      userIds: userIds ?? this.userIds,
      userNames: userNames ?? this.userNames,
      groupIds: groupIds ?? this.groupIds,
      groupNames: groupNames ?? this.groupNames,
      allTargetIds: allTargetIds ?? this.allTargetIds,
    );
  }
}
