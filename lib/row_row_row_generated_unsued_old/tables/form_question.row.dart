// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class FormQuestionRow {
  static const table = 'form_question';

  static const field = (
    id: 'id',
    question: 'question',
    description: 'description',
    images: 'images',
    type: 'type',
    isRequired: 'is_required',
    createdAt: 'created_at',
    updatedAt: 'updated_at',
    form: 'form',
    order: 'order',
    checkboxOptions: 'checkbox_options',
    checkboxDefault: 'checkbox_default',
    deletedAt: 'deleted_at',
  );

  final String id;
  final String? question;
  final String? description;
  final List<String>? images;
  final String? type;
  final bool? isRequired;
  final DateTime createdAt;
  final DateTime? updatedAt;
  final String? form;
  final int? order;
  final List<String>? checkboxOptions;
  final List<String>? checkboxDefault;
  final DateTime? deletedAt;

  const FormQuestionRow({
    required this.id,
    this.question,
    this.description,
    this.images,
    this.type,
    this.isRequired,
    required this.createdAt,
    this.updatedAt,
    this.form,
    this.order,
    this.checkboxOptions,
    this.checkboxDefault,
    this.deletedAt,
  });

  factory FormQuestionRow.fromJson(Map<String, dynamic> json) {
    return FormQuestionRow(
      id: json[field.id] as String,
      question: json[field.question],
      description: json[field.description],
      images: json[field.images] == null ? null : List<String>.from(json[field.images]),
      type: json[field.type],
      isRequired: json[field.isRequired],
      createdAt: DateTime.parse(json[field.createdAt]),
      updatedAt: json[field.updatedAt] == null ? null : DateTime.tryParse(json[field.updatedAt] ?? ''),
      form: json[field.form],
      order: json[field.order] == null ? null : (json[field.order] as num?)?.toInt(),
      checkboxOptions: json[field.checkboxOptions] == null ? null : List<String>.from(json[field.checkboxOptions]),
      checkboxDefault: json[field.checkboxDefault] == null ? null : List<String>.from(json[field.checkboxDefault]),
      deletedAt: json[field.deletedAt] == null ? null : DateTime.tryParse(json[field.deletedAt] ?? ''),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.question: question,
      field.description: description,
      field.images: images,
      field.type: type,
      field.isRequired: isRequired,
      field.createdAt: createdAt.toIso8601String(),
      field.updatedAt: updatedAt?.toIso8601String(),
      field.form: form,
      field.order: order,
      field.checkboxOptions: checkboxOptions,
      field.checkboxDefault: checkboxDefault,
      field.deletedAt: deletedAt?.toIso8601String(),
    };
  }

  FormQuestionRow copyWith({
    String? id,
    String? question,
    String? description,
    List<String>? images,
    String? type,
    bool? isRequired,
    DateTime? createdAt,
    DateTime? updatedAt,
    String? form,
    int? order,
    List<String>? checkboxOptions,
    List<String>? checkboxDefault,
    DateTime? deletedAt,
  }) {
    return FormQuestionRow(
      id: id ?? this.id,
      question: question ?? this.question,
      description: description ?? this.description,
      images: images ?? this.images,
      type: type ?? this.type,
      isRequired: isRequired ?? this.isRequired,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
      form: form ?? this.form,
      order: order ?? this.order,
      checkboxOptions: checkboxOptions ?? this.checkboxOptions,
      checkboxDefault: checkboxDefault ?? this.checkboxDefault,
      deletedAt: deletedAt ?? this.deletedAt,
    );
  }
}
