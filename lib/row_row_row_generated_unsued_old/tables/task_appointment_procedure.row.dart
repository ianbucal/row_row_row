// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class TaskAppointmentProcedureRow {
  static const table = 'task_appointment_procedure';

  static const field = (
    id: 'id',
    appointment: 'appointment',
    procedure: 'procedure',
    procedureName: 'procedure_name',
    procedurePrice: 'procedure_price',
    procedureCommission: 'procedure_commission',
    discountRate: 'discount_rate',
    discountAmount: 'discount_amount',
    createdAt: 'created_at',
    createdBy: 'created_by',
    clinic: 'clinic',
    refundAmount: 'refund_amount',
    paidOn: 'paid_on',
    commissionEnteredByUser: 'commission_entered_by_user',
    originalProcedurePrice: 'original_procedure_price',
    notes: 'notes',
  );

  final String id;
  final String appointment;
  final String? procedure;
  final String? procedureName;
  final double procedurePrice;
  final double procedureCommission;
  final double? discountRate;
  final double discountAmount;
  final DateTime createdAt;
  final String? createdBy;
  final String? clinic;
  final double? refundAmount;
  final DateTime? paidOn;
  final double? commissionEnteredByUser;
  final double? originalProcedurePrice;
  final String? notes;

  const TaskAppointmentProcedureRow({
    required this.id,
    required this.appointment,
    this.procedure,
    this.procedureName,
    required this.procedurePrice,
    required this.procedureCommission,
    this.discountRate,
    required this.discountAmount,
    required this.createdAt,
    this.createdBy,
    this.clinic,
    this.refundAmount,
    this.paidOn,
    this.commissionEnteredByUser,
    this.originalProcedurePrice,
    this.notes,
  });

  factory TaskAppointmentProcedureRow.fromJson(Map<String, dynamic> json) {
    return TaskAppointmentProcedureRow(
      id: json[field.id] as String,
      appointment: json[field.appointment] as String,
      procedure: json[field.procedure],
      procedureName: json[field.procedureName],
      procedurePrice: (json[field.procedurePrice] as num).toDouble(),
      procedureCommission: (json[field.procedureCommission] as num).toDouble(),
      discountRate: json[field.discountRate] == null ? null : (json[field.discountRate] as num?)?.toDouble(),
      discountAmount: (json[field.discountAmount] as num).toDouble(),
      createdAt: DateTime.parse(json[field.createdAt]),
      createdBy: json[field.createdBy],
      clinic: json[field.clinic],
      refundAmount: json[field.refundAmount] == null ? null : (json[field.refundAmount] as num?)?.toDouble(),
      paidOn: json[field.paidOn] == null ? null : DateTime.tryParse(json[field.paidOn] ?? ''),
      commissionEnteredByUser: json[field.commissionEnteredByUser] == null ? null : (json[field.commissionEnteredByUser] as num?)?.toDouble(),
      originalProcedurePrice: json[field.originalProcedurePrice] == null ? null : (json[field.originalProcedurePrice] as num?)?.toDouble(),
      notes: json[field.notes],
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.appointment: appointment,
      field.procedure: procedure,
      field.procedureName: procedureName,
      field.procedurePrice: procedurePrice,
      field.procedureCommission: procedureCommission,
      field.discountRate: discountRate,
      field.discountAmount: discountAmount,
      field.createdAt: createdAt.toIso8601String(),
      field.createdBy: createdBy,
      field.clinic: clinic,
      field.refundAmount: refundAmount,
      field.paidOn: paidOn?.toIso8601String(),
      field.commissionEnteredByUser: commissionEnteredByUser,
      field.originalProcedurePrice: originalProcedurePrice,
      field.notes: notes,
    };
  }

  TaskAppointmentProcedureRow copyWith({
    String? id,
    String? appointment,
    String? procedure,
    String? procedureName,
    double? procedurePrice,
    double? procedureCommission,
    double? discountRate,
    double? discountAmount,
    DateTime? createdAt,
    String? createdBy,
    String? clinic,
    double? refundAmount,
    DateTime? paidOn,
    double? commissionEnteredByUser,
    double? originalProcedurePrice,
    String? notes,
  }) {
    return TaskAppointmentProcedureRow(
      id: id ?? this.id,
      appointment: appointment ?? this.appointment,
      procedure: procedure ?? this.procedure,
      procedureName: procedureName ?? this.procedureName,
      procedurePrice: procedurePrice ?? this.procedurePrice,
      procedureCommission: procedureCommission ?? this.procedureCommission,
      discountRate: discountRate ?? this.discountRate,
      discountAmount: discountAmount ?? this.discountAmount,
      createdAt: createdAt ?? this.createdAt,
      createdBy: createdBy ?? this.createdBy,
      clinic: clinic ?? this.clinic,
      refundAmount: refundAmount ?? this.refundAmount,
      paidOn: paidOn ?? this.paidOn,
      commissionEnteredByUser: commissionEnteredByUser ?? this.commissionEnteredByUser,
      originalProcedurePrice: originalProcedurePrice ?? this.originalProcedurePrice,
      notes: notes ?? this.notes,
    );
  }
}
