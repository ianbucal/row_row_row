// Generated by row_row_row tool
// Auto-generated file. Do not modify.
class TaskClinicRefundRow {
  static const table = 'task_clinic_refund';

  static const field = (
    id: 'id',
    date: 'date',
    amount: 'amount',
    reason: 'reason',
    details: 'details',
    refundBy: 'refund_by',
    createdAt: 'created_at',
    task: 'task',
    clinic: 'clinic',
    processed: 'processed',
  );

  final String id;
  final DateTime? date;
  final double? amount;
  final String? reason;
  final String? details;
  final String? refundBy;
  final DateTime createdAt;
  final String? task;
  final String? clinic;
  final bool processed;

  const TaskClinicRefundRow({
    required this.id,
    this.date,
    this.amount,
    this.reason,
    this.details,
    this.refundBy,
    required this.createdAt,
    this.task,
    this.clinic,
    required this.processed,
  });

  factory TaskClinicRefundRow.fromJson(Map<String, dynamic> json) {
    return TaskClinicRefundRow(
      id: json[field.id] as String,
      date: json[field.date] == null ? null : DateTime.tryParse(json[field.date] ?? ''),
      amount: json[field.amount] == null ? null : (json[field.amount] as num?)?.toDouble(),
      reason: json[field.reason],
      details: json[field.details],
      refundBy: json[field.refundBy],
      createdAt: DateTime.parse(json[field.createdAt]),
      task: json[field.task],
      clinic: json[field.clinic],
      processed: json[field.processed] as bool,
    );
  }
  Map<String, dynamic> toJson() {
    return {
      field.id: id,
      field.date: date?.toIso8601String(),
      field.amount: amount,
      field.reason: reason,
      field.details: details,
      field.refundBy: refundBy,
      field.createdAt: createdAt.toIso8601String(),
      field.task: task,
      field.clinic: clinic,
      field.processed: processed,
    };
  }

  TaskClinicRefundRow copyWith({
    String? id,
    DateTime? date,
    double? amount,
    String? reason,
    String? details,
    String? refundBy,
    DateTime? createdAt,
    String? task,
    String? clinic,
    bool? processed,
  }) {
    return TaskClinicRefundRow(
      id: id ?? this.id,
      date: date ?? this.date,
      amount: amount ?? this.amount,
      reason: reason ?? this.reason,
      details: details ?? this.details,
      refundBy: refundBy ?? this.refundBy,
      createdAt: createdAt ?? this.createdAt,
      task: task ?? this.task,
      clinic: clinic ?? this.clinic,
      processed: processed ?? this.processed,
    );
  }
}
